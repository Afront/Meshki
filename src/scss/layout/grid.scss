/*
 * Meshki v2.0.0 (https://borderliner.github.io/Meshki/)
 * Copyright 2017 Mohammadreza Hajianpour <hajianpour.mr@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Variables
//////////////////////////////////////////////////
$screen-max-width: 960px;
$col-margin: 4%;

// Functions
//////////////////////////////////////////////////
// The idea is to remove 4% from the total width, which results in 96%.
// Now we divide it to 12, to use a 12th-width grid.
// Also, 2/3 means 0.666667, which is a number decreased or added to the result
// of 96/12 to balance everything.

@function column-width($part) {
  @if $part >= 1 and $part < 6 {
    $size: (((96 / 12) * $part) - ((6 - $part) * (2 / 3)));
    @return percentage($size / 100);
  }

  @elseif $part >=6 and $part < 12 {
    $size: (((96 / 12) * $part) + (($part - 6) * (2 / 3)));
    @return percentage($size / 100);
  }
}

@function offset-column-margin($part) {
  $size: ((96 / 12) * $part) + ($part * (2 / 3));
  @return percentage($size / 100);
}

/* Grid
–––––––––––––––––––––––––––––––––––––––––––––––––– */

/* Center the row, used to hold columns */
.row {
  .centerize;
  margin-bottom: 20px;
}

/* Content creates a responsive space to hold page data */
.content {
  position: relative;
  width: 100%;
  max-width: $screen-max-width;
  margin: 0 auto;
  padding: 0 20px;
  box-sizing: border-box;
}

/* Columns fill their parent from the left side */
.col {
  width: 100%;
  float: left;
  box-sizing: border-box;
}

/* Decrease the content width for non-mobiles */
@media (min-width: 400px) {
  .content {
    width: 85%;
    padding: 0;
  }
}

/* For devices larger than 544px */
@media (min-width: 544px) {
  /* Decrease content width for a proper look */
  .content {
    width: 80%;
  }

  /* Left margin for columns so they do not collide */
  .col {
    margin-left: $col-margin;
  }

  /* The first column doesn't need left margin */
  .col:first-child {
    margin-left: 0;
  }
}

.col {
  /* 12-based columns */
  &.one    { width: column-width(1);  }
  &.two    { width: column-width(2);  }
  &.three  { width: column-width(3);  }
  &.four   { width: column-width(4);  }
  &.five   { width: column-width(5);  }
  &.six    { width: column-width(6);  }
  &.seven  { width: column-width(7);  }
  &.eight  { width: column-width(8);  }
  &.nine   { width: column-width(9);  }
  &.ten    { width: column-width(10); }
  &.eleven { width: column-width(11); }
  /* Fill the row, with no margin on the left */
  &.twelve { width: 100%; margin-left: 0; }

  /* Proportional columns */
  &.one-third  { width: column-width(4); }
  &.two-third,
  &.two-thirds { width: column-width(8); }

  /* Half of the container columns */
  &.half,
  &.one-half   { width: column-width(6); }

  /* Offsets */
  &.offset-by-one    { margin-left: offset-column-margin(1);  }
  &.offset-by-two    { margin-left: offset-column-margin(2);  }
  &.offset-by-three  { margin-left: offset-column-margin(3);  }
  &.offset-by-four   { margin-left: offset-column-margin(4);  }
  &.offset-by-five   { margin-left: offset-column-margin(5);  }
  &.offset-by-six    { margin-left: offset-column-margin(6);  }
  &.offset-by-seven  { margin-left: offset-column-margin(7);  }
  &.offset-by-eight  { margin-left: offset-column-margin(8);  }
  &.offset-by-nine   { margin-left: offset-column-margin(9);  }
  &.offset-by-ten    { margin-left: offset-column-margin(10); }
  &.offset-by-eleven { margin-left: offset-column-margin(11); }

  /* Proportional Offsets */
  &.offset-by-one-third  { margin-left: offset-column-margin(4); }
  &.offset-by-two-third,
  &.offset-by-two-thirds { margin-left: offset-column-margin(8); }

  /* Half of the container as offset */
  &.offset-by-half,
  &.offset-by-one-half   { margin-left: offset-column-margin(6); }
}
